#This project utilizes the following Superstore data:

CREATE TABLE superstore (
2
    item_id INTEGER PRIMARY KEY,
3
    item_name TEXT,
4
    category TEXT,
5
    price DECIMAL(10, 2),
6
    stock_quantity INTEGER,
7
    average_rating DECIMAL(3, 2)
8
);
9
â€‹
10
INSERT INTO superstore (item_id, item_name, category, price, stock_quantity, average_rating)
11
VALUES
12
    (1, 'Stainless Steel Cookware Set', 'Kitchen Supplies', 89.99, 50, 4.6),
13
    (2, 'Memory Foam Mattress', 'Furnishings', 499.99, 30, 4.8),
14
    (3, 'Smart LED TV', 'Electronics', 549.00, 20, 4.5),
15
    (4, 'Robot Vacuum Cleaner', 'Appliances', 199.50, 40, 4.3),
16
    (5, 'Wireless Bluetooth Speaker', 'Electronics', 39.99, 60, 4.2),
17
    (6, 'Non-Stick Baking Set', 'Kitchen Supplies', 29.95, 80, 4.4),
18
    (7, 'Cotton Bedding Set', 'Furnishings', 89.00, 25, 4.7),
19
    (8, 'Smart Home Security Camera', 'Electronics', 79.95, 15, 4.1),
20
    (9, 'Air Purifier', 'Appliances', 129.50, 35, 4.6),
21
    (10, 'Premium Coffee Maker', 'Kitchen Supplies', 79.99, 50, 4.9),
22
    (11, 'Ergonomic Office Chair', 'Furnishings', 189.00, 20, 4.5),

#For this project, I used SQL to query the Superstore database to get information about items sold at the store and their prices. 

SELECT*
FROM superstore
ORDER BY price;

SELECT AVG(price)
FROM superstore;

#I wanted to see which kitchen supplies the store had that cost more than 25.00
SELECT item_name,price
FROM superstore
WHERE category='Kitchen Supplies' AND price > 25.00;

#I wanted to find out which items under 50.00 the store had in stock in a large quantity
SELECT item_name,stock_quantity,price
FROM superstore
WHERE stock_quantity>50 AND price <50.00;
